[package]
authors.workspace = true
categories = ["wasm"]
description = "Configurable JavaScript runtime for WebAssembly"
edition.workspace = true
homepage = "https://github.com/bytecodealliance/javy/tree/main/crates/javy"
license.workspace = true
name = "javy"
repository = "https://github.com/bytecodealliance/javy/tree/main/crates/javy"
version = "3.1.1-alpha.1"

[dependencies]
anyhow = {workspace = true}
rmp-serde = {version = "^1.3", optional = true}
rquickjs = {version = "0.8", features = ["array-buffer", "bindgen"]}
rquickjs-core = "0.8"
rquickjs-sys = "0.8"
serde = {workspace = true, default-features = true, features = ["derive"]}
serde-transcode = {version = "1.1", optional = true}
serde_json = {workspace = true, optional = true}
# TODO: cargo doesn't seem to pickup the fact that quickcheck is only used for
# tests.
bitflags = "2.6"
fastrand = "2.3"
quickcheck = "1"
simd-json = {version = "0.14", optional = true, default-features = false, features = [
  "big-int-as-float",
  "serde_impl",
]}

[dev-dependencies]
javy-test-macros = {path = "../test-macros/"}

[features]
export_alloc_fns = []
messagepack = ["rmp-serde", "serde-transcode"]
# According to our benchmarks and experiments, the fastest and most efficient
# JSON implementation comes from:
# * Using SIMD JSON for parsing
# * Using serde_json for stringifying
# This implementation is behind a feature flag, because of the code size
# implications of enabling by default (due to the extra dependencies) and also
# because the native implementation is probably fine for most use-cases.
json = ["serde_json", "serde-transcode", "simd-json"]
